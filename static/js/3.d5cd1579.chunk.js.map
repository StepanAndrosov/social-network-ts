{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","id","name","className","style","Dialog","to","Message","message","maxLength","MaxLengthCreator","AddMessageFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","mapStateToProps","state","isAuth","auth","compose","Component","connect","restProps","dialogsData","dialogsPage","messagesData","sendMessage","Dialogs","dialogItems","map","item","active","messages","values","newMessageBody"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,OAAS,0B,oBCA9ID,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,uHCSfC,EAAwC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC7D,OACI,qBAAKA,UAAS,UAAKC,IAAMC,OAAX,cAAuBF,GAArC,SACI,cAAC,IAAD,CAASG,GAAI,YAAcL,EAA3B,SAAgCC,O,kBCL/BK,EAAsC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjD,OACI,qBAAKL,UAAWC,IAAMG,QAAtB,SACI,8BAAMC,O,kCCCZC,EAAYC,YAAiB,IAmB7BC,EAAsBC,YAA8B,CACtDC,KAAM,oBADkBD,EAjB4C,SAACE,GAErE,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,cAACC,EAAA,EAAD,CACIf,KAAM,iBACNgB,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBa,YAAa,uBAEjB,8BACI,kD,sBCjBVC,EAAkB,SAACC,GAAD,MAAwC,CAC5DC,OAAQD,EAAME,KAAKD,S,WCiBRE,uBDdR,SAA2BC,GAW9B,OAAOC,YAAQN,EAAiB,GAAzBM,EAT0C,SAACf,GAAW,IAElDW,EAAwBX,EAAxBW,OAAWK,EAFsC,YAEzBhB,EAFyB,YAIxD,OAAKW,EAEE,cAACG,EAAD,eAAeE,IAFF,cAAC,IAAD,CAAUxB,GAAI,gBCUtCuB,aAToB,SAACL,GACrB,MAAO,CACHO,YAAaP,EAAMQ,YAAYD,YAC/BE,aAAcT,EAAMQ,YAAYC,gBAMX,CAACC,kBAFfP,EFSoC,SAAC,GAA2C,IAA1CI,EAAyC,EAAzCA,YAAaE,EAA4B,EAA5BA,aAAiBnB,EAAW,8CAM1F,OACI,sBAAKX,UAAWC,IAAM+B,QAAtB,UACI,qBAAKhC,UAAWC,IAAMgC,YAAtB,SAEQL,EAAYM,KAAI,SAAAC,GAAI,OAAgB,IAAZA,EAAKrC,GACzB,cAAC,EAAD,CAAYE,UAAWC,IAAMmC,OAAQtC,GAAIqC,EAAKrC,GAAIC,KAAMoC,EAAKpC,MAAWoC,EAAKrC,GAAKqC,EAAKpC,MACvF,cAAC,EAAD,CAAYD,GAAIqC,EAAKrC,GAAIC,KAAMoC,EAAKpC,MAAWoC,EAAKrC,GAAKqC,EAAKpC,WAG1E,sBAAKC,UAAWC,IAAMoC,SAAtB,UACI,8BACIP,EAAaI,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAsCrC,GAAIqC,EAAKrC,GACtCO,QAAS8B,EAAK9B,SADT8B,EAAKrC,GAAKqC,EAAK9B,cAG1D,8BACI,cAACG,EAAD,CAAqBI,SAnBV,SAAC0B,GACxB3B,EAAMoB,YAAYO,EAAOC","file":"static/js/3.d5cd1579.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__-7vJc\",\"dialogItems\":\"Dialogs_dialogItems__1ykr4\",\"messages\":\"Dialogs_messages__22mdW\",\"active\":\"Dialogs_active__2cwyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"DialogItem_Dialog__1MC2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__2_EZz\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport type DialogPropsType = {\r\n    id: number\r\n    name: string\r\n    className?: string\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogPropsType> = ({id, name, className}) => {\r\n    return (\r\n        <div className={`${style.Dialog} + ${className}`}>\r\n            <NavLink to={'/dialogs/' + id}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./Message.module.scss\"\r\n\r\nexport type MessagePropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({message}) => {\r\n    return (\r\n        <div className={style.Message}>\r\n            <div>{message}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./Dialogs.module.scss\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\"\r\nimport {Message} from \"./Message/Message\"\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {MaxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype TextareaDialogType = {\r\n    newMessageBody: string\r\n}\r\nconst maxLength = MaxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<TextareaDialogType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name={'newMessageBody'}\r\n                component={Textarea}\r\n                validate={[required, maxLength]}\r\n                placeholder={\"Enter your message\"}\r\n            />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<TextareaDialogType>({\r\n    form: 'dialogAddMessage'\r\n})(AddMessageForm)\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = ({dialogsData, messagesData, ...props}) => {\r\n\r\n    const onSendMessageClick = (values: { newMessageBody: string }) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={style.Dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {\r\n                    dialogsData.map(item => item.id === 1 ?\r\n                        <DialogItem className={style.active} id={item.id} name={item.name} key={item.id + item.name}/> :\r\n                        <DialogItem id={item.id} name={item.name} key={item.id + item.name}/>)\r\n                }\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div>{\r\n                    messagesData.map(item => <Message key={item.id + item.message} id={item.id}\r\n                                                      message={item.message}/>)\r\n                }</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={onSendMessageClick}  />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStateType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect (Component: any) {\r\n\r\n    const RedirectComponent:React.FC<MapStateType> = (props) => {\r\n\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps } />\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent)\r\n}\r\n","import { DialogType, MessageType, sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\ntype MapDispatchType = {\r\n    sendMessage: (value: string) => void\r\n}\r\n\r\ntype MapStateType = {\r\n    dialogsData: Array<DialogType>\r\n    messagesData: Array<MessageType>\r\n}\r\n\r\nexport type DialogsPropsType = MapDispatchType & MapStateType\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateType => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n        messagesData: state.dialogsPage.messagesData\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {sendMessage})\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}