{"version":3,"sources":["redux/dialogs-reducer.ts","components/Profile/Profile.module.scss","components/Nav/Nav.module.scss","components/Nav/Nav.tsx","api/api.ts","redux/users/users-reducer.tsx","accets/images/Morty_Smith.jpg","components/Users/User/User.tsx","components/Users/Paginatop/Paginator.tsx","components/Users/Users.tsx","accets/images/Skateboarding.gif","components/common/Preloader/Preloader.tsx","redux/users/users-selector.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.ts","accets/images/fin.jpg","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","accets/images/react.png","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","App.tsx","hoc/whithSuspense.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/Users/User/User.module.css","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/common/FormsControls/FormControls.module.css","utils/validators/validators.ts","components/common/FormsControls/FormsControls.tsx","App.module.scss","components/Header/Header.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Login/Login.module.css","components/Users/Users.module.css","components/Users/Paginatop/Paginator.module.scss","components/Profile/MyPosts/MyPosts.module.scss"],"names":["SEND_MESSAGE","initialState","dialogsData","id","name","messagesData","message","dialogsReducer","state","action","type","newMessage","Math","random","newMessageBody","sendMessage","module","exports","Nav","className","style","styleWrapper","to","activeClassName","active","instance","axios","create","withCredentials","baseURL","headers","authAPI","get","then","response","data","email","password","rememberMe","post","delete","usersAPI","currentPage","pageSize","userId","profileAPI","getProfile","getStatus","updateStatus","status","put","isFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","setUsers","setTotalUsersCount","usersCount","setIsFetching","toggleIsFollowingInProgress","User","props","avaBlock","ava","src","photo","Morty","alt","disabled","some","followed","btnUnFollow","btnFollow","onClick","followUnfollowTC","Paginator","totalItemsCount","portionSize","onSetCurrentPage","pagesCount","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","cn","selectedPage","Users","header","item","photos","small","marginTop","display","justifyContent","alignItems","Preloader","maxWidth","Loader","getUsers","usersPage","UsersContainer","page","setCurrentPage","getUsersTC","this","Component","connect","dispatch","a","items","totalCount","resultCode","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","value","prevProps","prevState","onDoubleClick","autoFocus","onChange","onBlur","React","ProfileInfo","profile","profilePhoto","large","fullName","profileName","myContacts","contacts","vk","github","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","postsData","likesCount","newPostText","aboutMe","facebook","website","twitter","instagram","youtube","mainLink","lookingForAJob","lookingForAJobDescription","setStatus","Post","postImg","messageBlock","maxLength","MaxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","memo","postBlock","values","addPost","MyPostsContainer","profilePage","postText","Profile","ProfileContainer","undefined","match","params","authorizedUser","Number","setUserProfileTC","getStatusTC","updateStatusTC","WithUrlDataComponent","withRouter","auth","isAuth","Header","reactLogo","loginBlock","login","logoutTC","SET_USER_DATA","setUserData","HeaderContainer","LoginReduxForm","Login","InputTextBlock","Input","htmlFor","error","errorStyle","summaryError","loginTC","messages","length","stopSubmit","_error","formData","INITIAL","initialized","DialogsContainer","lazy","App","initializeAppTC","Wrapper","Main","path","render","fallback","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","newPost","dialogsPage","u","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","_store_","ReactDOM","StrictMode","basename","process","document","getElementById","FormControl","input","meta","hasError","touched","FormBlock","children","restProps"],"mappings":"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","file":"static/js/main.42631b0c.chunk.js","sourcesContent":["import {ActionsType} from \"./redux-store\";\r\n\r\nconst SEND_MESSAGE = \"dialog/SEND_MESSAGE\"\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogsPageType = {\r\n    dialogsData: Array<DialogType>\r\n    messagesData: Array<MessageType>\r\n}\r\n\r\nconst initialState: DialogsPageType = {\r\n    dialogsData: [\r\n        {id: 1, name: 'Rick'},\r\n        {id: 2, name: 'Morty'},\r\n        {id: 3, name: 'Баклажан'},\r\n        {id: 4, name: 'Пельмень'}\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'I`m cucumber'},\r\n        {id: 3, message: 'Where is my portal gun?'},\r\n        {id: 4, message: 'Morty is jerk!'}\r\n    ],\r\n}\r\nexport const dialogsReducer = (state = initialState, action: ActionsType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            const newMessage: MessageType = {\r\n                id: Math.random() * 100,\r\n                message: action.newMessageBody\r\n            }\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {...newMessage}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessage = (newMessageBody: string) =>\r\n    ({type: SEND_MESSAGE, newMessageBody} as const)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3TnSb\",\"profileName\":\"Profile_profileName__1ezcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Nav_Nav__nhsNb\",\"active\":\"Nav_active__3qVer\"};","import style from \"./Nav.module.scss\"\r\nimport styleWrapper from \"../../App.module.scss\"\r\nimport React from \"react\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Nav: React.FC = () => {\r\n    return (\r\n        <nav className={`${style.Nav} + ${styleWrapper.Nav}`}>\r\n            <ul>\r\n                <li><NavLink to={\"/profile\"} activeClassName={style.active}>Profile</NavLink></li>\r\n                <li><NavLink to={\"/dialogs\"} activeClassName={style.active}>Messages</NavLink></li>\r\n                <li><NavLink to={\"/users\"} activeClassName={style.active}>Users</NavLink></li>\r\n                <li><NavLink to={\"/news\"} activeClassName={style.active}>News</NavLink></li>\r\n                <li><NavLink to={\"/music\"} activeClassName={style.active}>Music</NavLink></li>\r\n                <li><NavLink to={\"/settings\"} activeClassName={style.active}>Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"ac5021a6-6592-4dfc-bd91-07a05b477711\"\r\n    }\r\n})\r\nexport type ResponseType<D> = {\r\n    resultCode: number,\r\n    messages: Array<string>,\r\n    data: D\r\n}\r\nexport type AuthDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport const authAPI = {\r\n    authMe(){\r\n        return instance.get<ResponseType<AuthDataType>>(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false){\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile(userId: number | undefined){\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | undefined){\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus(userId: number | undefined){\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatus(status: string | null){\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => response.data)\r\n    }\r\n}\r\n","import {ActionsType} from \"../redux-store\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst isFOLLOW = 'users/isFOLLOW'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT'\r\nconst IS_FETCHING = 'users/IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nexport type UserType = {\r\n    photos: any;\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: { city: string, country: string }\r\n    userPhoto: string\r\n    alt: string\r\n}\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case isFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: !u.followed} : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.usersCount\r\n            }\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const isFollow = (userId: number) =>\r\n    ({type: isFOLLOW, userId} as const)\r\nexport const setUsers = (users: Array<UserType>) =>\r\n    ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (currentPage: number) =>\r\n    ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (usersCount: number) =>\r\n    ({type: SET_TOTAL_USERS_COUNT, usersCount} as const)\r\nexport const setIsFetching = (isFetching: boolean) =>\r\n    ({type: IS_FETCHING, isFetching} as const)\r\nexport const toggleIsFollowingInProgress = (userId: number, isFetching: boolean) =>\r\n    ({type: TOGGLE_IS_FOLLOWING_PROGRESS, userId, isFetching} as const)\r\n// thunks\r\nexport const getUsersTC = (currentPage: number, pageSize: number) =>\r\n    async (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setIsFetching(true))\r\n        const data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n        dispatch(setIsFetching(false))\r\n    }\r\nexport const followUnfollowTC = (followed: boolean, id: number) =>\r\n    async (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(toggleIsFollowingInProgress(id, true))\r\n        const data = followed ? await usersAPI.unFollow(id) : await usersAPI.follow(id)\r\n        if (data.resultCode === 0) {\r\n            dispatch(isFollow(id))\r\n            dispatch(toggleIsFollowingInProgress(id, false))\r\n        }\r\n    }\r\n","export default __webpack_public_path__ + \"static/media/Morty_Smith.f78db6f7.jpg\";","import style from './User.module.css'\r\nimport Morty from \"./../../../accets/images/Morty_Smith.jpg\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\ntype PropsType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photo: any\r\n    followingInProgress: [] | Array<number>\r\n    followUnfollowTC: (followed: boolean, id: number) => void\r\n}\r\n\r\nexport const User = (props: PropsType) => {\r\n\r\n    const toggleFollowUnfollow = () => {\r\n        props.followUnfollowTC(props.followed, props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={style.User}>\r\n            <NavLink to={'/profile/' + props.id}>\r\n                <div className={style.avaBlock}>\r\n                    <div>\r\n                        <h4 className={style.name}>{props.name}</h4>\r\n                    </div>\r\n                    <div>\r\n                        <img\r\n                            className={style.ava}\r\n                            src={props.photo != null ? props.photo : Morty}\r\n                            alt={\"defaultAvatar\"}/>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n            <span>\r\n                my status:\r\n                <span className={style.status}>{props.status}</span>\r\n            </span>\r\n            <button\r\n                disabled={props.followingInProgress.some(id => id === props.id)}\r\n                className={props.followed ? style.btnUnFollow : style.btnFollow}\r\n                onClick={toggleFollowUnfollow}\r\n            >\r\n                {props.followed ? 'unfollow' : 'follow'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import style from \"./Paginator.module.scss\"\r\nimport React, {useState} from \"react\"\r\nimport cn from \"classnames\"\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    currentPage: number\r\n    totalItemsCount: number\r\n    onSetCurrentPage: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = ({\r\n                                                   totalItemsCount,\r\n                                                   pageSize,\r\n                                                   portionSize = 20,\r\n                                                   currentPage,\r\n                                                   onSetCurrentPage\r\n                                               }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState<number>(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>PREV</button>\r\n            }\r\n\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p =>\r\n                        <span\r\n                            key={p}\r\n                            className={cn({[style.selectedPage]: currentPage === p})}\r\n                            onClick={() => {\r\n                                onSetCurrentPage(p)\r\n                            }}\r\n                        >\r\n                            {p}\r\n                        </span>\r\n                    )\r\n            }\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import {User} from \"./User/User\";\r\nimport style from \"./Users.module.css\"\r\nimport React from \"react\";\r\nimport {UserType} from \"../../redux/users/users-reducer\";\r\nimport {Paginator} from \"./Paginatop/Paginator\";\r\n\r\ntype UsersType = {\r\n    users: Array<UserType>\r\n    currentPage: number\r\n    onSetCurrentPage: (page: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    followingInProgress: [] | Array<number>\r\n    followUnfollowTC: (followed: boolean, id: number) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersType> = (props) => {\r\n    return (\r\n        <div>\r\n            <h3 className={style.header}>UsersList:</h3>\r\n            <Paginator\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onSetCurrentPage={props.onSetCurrentPage}\r\n                totalItemsCount={props.totalUsersCount}\r\n            />\r\n            <div className={style.Users}>\r\n                {\r\n                    props.users.map(item => {\r\n                        return (\r\n                            <User key={item.id}\r\n                                  id={item.id}\r\n                                  followed={item.followed}\r\n                                  name={item.name}\r\n                                  status={item.status}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  photo={item.photos.small}\r\n                                  followUnfollowTC={props.followUnfollowTC}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Skateboarding.b53f1c75.gif\";","import Loader from \"../../../accets/images/Skateboarding.gif\";\r\nimport React from \"react\";\r\n\r\nconst style = {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    \"flex-direction\": \"column\",\r\n    alignItems: \"center\"\r\n}\r\nexport const Preloader = () => {\r\n    return (\r\n        <div style={style}>\r\n            <div>learn react</div>\r\n            <img style={{maxWidth: '40px'}} src={Loader} alt={'loader-Skateboarding'}/>\r\n        </div>\r\n    )\r\n}\r\n","import {AppStateType} from \"../redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const pageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const totalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const currentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const isFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const followingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    followUnfollowTC, getUsersTC,\r\n    setCurrentPage, setIsFetching,\r\n    setTotalUsersCount, setUsers,\r\n    UserType\r\n} from \"../../redux/users/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport React, {Component} from \"react\";\r\nimport {\r\n    currentPage, followingInProgress,\r\n    getUsers, isFetching,\r\n    pageSize, totalUsersCount\r\n} from \"../../redux/users/users-selector\";\r\n\r\ntype MapDispatchType = {\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (usersCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n    getUsersTC: (currentPage: number, pageSize: number) => void\r\n    followUnfollowTC: (followed: boolean, id: number) => void\r\n}\r\ntype MapStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: [] | Array<number>\r\n}\r\nexport type UsersPropsType = MapDispatchType & MapStateType\r\n\r\nclass UsersContainer extends Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onSetCurrentPage = (page: number) => {\r\n        this.props.setCurrentPage(page)\r\n        this.props.getUsersTC(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching ? <Preloader/> : null\r\n                }\r\n                <Users users={this.props.users}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       onSetCurrentPage={this.onSetCurrentPage}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       followUnfollowTC={this.props.followUnfollowTC}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: pageSize(state),\r\n        totalUsersCount: totalUsersCount(state),\r\n        currentPage: currentPage(state),\r\n        isFetching: isFetching(state),\r\n        followingInProgress: followingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUsers, setTotalUsersCount,\r\n    setCurrentPage, setIsFetching,\r\n    getUsersTC, followUnfollowTC\r\n})(UsersContainer)\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from \"../ProfileInfo.module.scss\"\r\n\r\ntype PropsStatusType = {\r\n    status: string | null\r\n    updateStatus?: (status: string | null) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<PropsStatusType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        if(this.props.updateStatus)\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsStatusType>, prevState: Readonly<{}>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.ProfileStatus}>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}> <b> {this.props.status || 'No status'}</b> </span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input autoFocus onChange={this.onStatusChange} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status ? this.state.status : ''}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import style from \"./ProfileInfo.module.scss\"\r\nimport React from \"react\"\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileInfoType} from \"../Profile\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={style.ProfileInfo}>\r\n            <div className={style.profilePhoto}>\r\n                <img  src={props.profile.photos.large} alt={`${props.profile.fullName}`} />\r\n            </div>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n            <div className={style.profileName}><span>My name: <b>{props.profile.fullName}</b></span></div>\r\n            <div className={style.myContacts}>\r\n                My contacts:\r\n                <div><span><b>vk: </b>{props.profile.contacts.vk}</span></div>\r\n                <div><span><b>github: </b>{props.profile.contacts.github}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {ActionsType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"profile/ADD-POST\"\r\nconst SET_USER_PROFILE = \"profile/SET_USER_PROFILE\"\r\nconst SET_STATUS = \"profile/SET_STATUS\"\r\nconst DELETE_POST = \"profile/DELETE-POST\"\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n    profile: {\r\n        aboutMe: null | string\r\n        contacts: {\r\n            facebook: null | string\r\n            website: null | string\r\n            vk: null | string\r\n            twitter: null | string\r\n            instagram: null | string\r\n            youtube: null | string\r\n            github: null | string\r\n            mainLink: null | string\r\n        },\r\n        lookingForAJob: boolean\r\n        lookingForAJobDescription: null | string\r\n        fullName: string\r\n        userId: number\r\n        photos: {\r\n            small: string\r\n            large: string\r\n        }\r\n    },\r\n    status: string | null\r\n}\r\n\r\nconst initialState: ProfilePageType = {\r\n    postsData: [\r\n        {id: 1, message: 'Hi', likesCount: 35840},\r\n        {id: 2, message: 'Yo', likesCount: 10560},\r\n        {id: 3, message: 'My brother is Jake', likesCount: 3650},\r\n        {id: 4, message: 'It`s my first post', likesCount: 1545}\r\n    ],\r\n    newPostText: \"It is a crazy FLUX!\",\r\n    profile: {\r\n        aboutMe: null,\r\n        contacts: {\r\n            facebook: null,\r\n            website: null,\r\n            vk: null,\r\n            twitter: null,\r\n            instagram: null,\r\n            youtube: null,\r\n            github: null,\r\n            mainLink: null,\r\n        },\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: \"\",\r\n        userId: 0,\r\n        photos: {\r\n            small: \"\",\r\n            large: \",\"\r\n        }\r\n    },\r\n    status: \"\",\r\n}\r\n\r\nexport type ProfileType = typeof initialState.profile\r\n\r\nexport const profileReducer = (state = initialState, action: ActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostType = {\r\n                id: Math.random() * 100,\r\n                message: action.postText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                postsData: [{...newPost}, ...state.postsData],\r\n                newPostText: ''\r\n            }\r\n        case DELETE_POST:\r\n            return {...state, postsData: state.postsData.filter(p => p.id !== action.id)}\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// actions\r\nexport const addPost = (postText: string) => ({type: ADD_POST, postText} as const)\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const)\r\nexport const setStatus = (status: string | null) => ({type: SET_STATUS, status} as const)\r\nexport const deletePost = (id: number) => ({type: DELETE_POST, id} as const)\r\n//thunks\r\nexport const getStatusTC = (id: number | undefined) => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await profileAPI.getStatus(id)\r\n    dispatch(setStatus(response))\r\n}\r\nexport const updateStatusTC = (status: string | null) => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const setUserProfileTC = (id: number | undefined) => async (dispatch: Dispatch<ActionsType>) => {\r\n    const data = await profileAPI.getProfile(id)\r\n    dispatch(setUserProfile(data))\r\n}\r\n","export default __webpack_public_path__ + \"static/media/fin.2f5ae759.jpg\";","import React from \"react\"\r\nimport style from \"./Post.module.scss\"\r\nimport postImg from \"./../../../../accets/images/fin.jpg\"\r\n\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport const Post: React.FC<PostType> = ({message, likesCount}) => {\r\n    return (\r\n        <div className={style.Post}>\r\n            <img src={postImg} alt={\"img post\"}/>\r\n            <div className={style.messageBlock}>\r\n                <span>{message}</span>\r\n                <span className={style.likesCount}>like: {likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport style from \"./MyPosts.module.scss\"\r\nimport {Post} from \"./Post/Post\"\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {MaxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype MyPostsPropsType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n    addPost: (text: string) => void\r\n}\r\ntype TextareaPostType = {\r\n    newPostText: string\r\n}\r\n\r\nconst maxLength = MaxLengthCreator(50)\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<TextareaPostType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name={'newPostText'}\r\n                component={Textarea}\r\n                placeholder=\"It is a crazy FLUX!\"\r\n                validate={[required, maxLength]}\r\n            />\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm<TextareaPostType>({\r\n    form: 'postAddMessage'\r\n})(AddPostForm)\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo(({postsData}, props) => {\r\n    const onAddPost = (values: { newPostText: string }) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={style.MyPosts}>\r\n            <div className={style.postBlock}>\r\n                <div>Add post</div>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            {\r\n                postsData.map(item =>\r\n                    <Post key={item.id + item.message}\r\n                          id={item.id}\r\n                          message={item.message}\r\n                          likesCount={item.likesCount}\r\n                    />)\r\n            }\r\n        </div>\r\n    )\r\n})\r\n","import {addPost, PostType} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsType = {\r\n    postsData: Array<PostType>\r\n    newPostText: string\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts)\r\n","import style from \"./Profile.module.scss\"\r\nimport React from \"react\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\"\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\nexport type ProfileInfoType = {\r\n    profile: ProfileType\r\n    status: string | null\r\n    updateStatus?: (status: string | null) => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfileInfoType> = (props) => {\r\n    return (\r\n        <div className={style.Profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n","import {Profile} from \"./Profile\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {getStatusTC, ProfileType, setUserProfileTC, updateStatusTC} from \"../../redux/profile-reducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    status: string | null\r\n    authorizedUser: number | null\r\n    auth: boolean\r\n}\r\ntype MapDispatchType = {\r\n    setUserProfileTC: (userId: number | undefined) => void\r\n    getStatusTC: (userId: number | undefined) => void\r\n    updateStatusTC?: (status: string | null) => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchType\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & PropsType\r\n\r\nclass ProfileContainer extends Component<CommonPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId === undefined\r\n            ? this.props.authorizedUser || 15114\r\n            : Number(this.props.match.params.userId)\r\n\r\n        this.props.setUserProfileTC(userId)\r\n        this.props.getStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatusTC}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUser: state.auth.userId,\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst WithUrlDataComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUserProfileTC,\r\n    getStatusTC,\r\n    updateStatusTC\r\n})(WithUrlDataComponent)\r\n","export default __webpack_public_path__ + \"static/media/react.887f90e5.png\";","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport reactLogo from \"../../accets/images/react.png\"\r\nimport style from \"./Header.module.scss\"\r\n\r\ntype HeaderType = {\r\n    userId: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n    logoutTC: () => void\r\n}\r\n\r\nexport const Header: React.FC<HeaderType> = (props) => {\r\n    return (\r\n        <div className={style.Header}>\r\n            <header >\r\n                <img className={style.reactLogo} src={reactLogo} alt=\"react\"/>\r\n\r\n                <div className={style.loginBlock}>\r\n                    {\r\n                        props.isAuth\r\n                            ? <div className={style.profileName}><div>{props.login}</div> <button onClick={props.logoutTC}>Logout</button></div>\r\n                            : <NavLink to={'/login'}>Login</NavLink>\r\n                    }\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {ActionsType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {FormAction} from \"redux-form/lib/actions\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\"\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userId: null as (number | null),\r\n    email: null as (string | null),\r\n    login: null as (string | null)\r\n}\r\n\r\nexport type AuthType = typeof initialState\r\n\r\nexport const authReducer = (state = initialState, action: ActionsType): AuthType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions\r\nexport const setUserData = (userId: null | number, email: null | string, login: null | string, isAuth: boolean) =>\r\n    ({type: SET_USER_DATA, data: {userId, email, login}, isAuth} as const)\r\n\r\n// thunks\r\nexport const getAuthUserDataTC = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await authAPI.authMe()\r\n    if (response.resultCode === 0) {\r\n        const {id, login, email} = response.data\r\n        dispatch(setUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch<ActionsType | FormAction>) => {\r\n    const response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        authAPI.authMe()\r\n            .then(response => {\r\n                if (response.resultCode === 0) {\r\n                    const {id, login, email} = response.data\r\n                    dispatch(setUserData(id, email, login, true))\r\n                }\r\n            })\r\n    } else {\r\n        const message = response.messages.length > 0 ? response.messages[0] : \"Email or password is wrong\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n\r\n}\r\nexport const logoutTC = () => async (dispatch: Dispatch<ActionsType>) => {\r\n    const response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    userId: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchType = {\r\n    logoutTC: () => void\r\n}\r\ntype PropsType = MapStateToPropsType & MapDispatchType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {logoutTC})(HeaderContainer)\r\n","import React from 'react'\r\nimport style from './Login.module.css'\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport errorStyle from \"../../components/common/FormsControls/FormControls.module.css\"\r\n\r\ntype LoginFormType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.Login}>\r\n            <div className={style.InputTextBlock}>\r\n                <Field type={'text'} component={Input} validate={[required]} name={'email'} placeholder={'Email'}/>\r\n            </div>\r\n            <div className={style.InputTextBlock}>\r\n                <Field type={'text'} component={Input} validate={[required]} name={'password'}\r\n                       placeholder={'Password'}/>\r\n            </div>\r\n            <Field id={'rememberMe'} component={'input'} name={'rememberMe'} type={'checkbox'}/> <label\r\n            htmlFor={'rememberMe'}>remember me</label>\r\n\r\n            {props.error && <div className={errorStyle.summaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const LoginReduxForm = reduxForm<LoginFormType>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype LoginType = {\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\n\r\nconst Login: React.FC<LoginType> = ({loginTC}, props) => {\r\n    const onSubmit = (formData: LoginFormType) => {\r\n        loginTC(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\ntype MapStateType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n","import {ActionsType} from \"./redux-store\";\r\nimport {getAuthUserDataTC} from \"./auth-reducer\";\r\n\r\nconst INITIAL = \"INITIAL\"\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n}\r\n\r\nexport type AuthType = typeof initialState\r\n\r\nexport const appReducer = (state = initialState, action: ActionsType): AuthType => {\r\n    switch (action.type) {\r\n        case INITIAL:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitializedAC = () => {\r\n    return {type: INITIAL} as const\r\n}\r\n\r\nexport const initializeAppTC = () => (dispatch: any) => {\r\n    const promise = dispatch(getAuthUserDataTC())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitializedAC())\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react'\nimport style from './App.module.scss'\nimport {Nav} from \"./components/Nav/Nav\"\nimport {Route} from \"react-router-dom\"\nimport UsersContainer from \"./components/Users/UsersContainer\"\nimport ProfileContainer from \"./components/Profile/ProfileContainer\"\nimport HeaderContainer from \"./components/Header/HeaderContainer\"\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/whithSuspense\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\ntype MapStateToProps = {\n    initialized: boolean\n}\ntype MapDispatchType = {\n    initializeAppTC: () => void\n}\ntype PropsType = MapDispatchType & MapStateToProps\n\nclass App extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.initializeAppTC()\n    }\n\n    render() {\n        if (!this.props.initialized)\n            return <Preloader/>\n        return (\n            <div className={style.Wrapper}>\n                <HeaderContainer/>\n                <Nav/>\n                <div className={style.Main}>\n                    <Route\n                        path='/profile/:userId?'\n                        render={() => <ProfileContainer/>}\n                    />\n                    <Route\n                        path='/dialogs'\n                        render={withSuspense(DialogsContainer)}\n                    />\n                    <Route\n                        path='/users'\n                        render={() => <UsersContainer/>}\n                    />\n                    <Route\n                        path='/login'\n                        render={() => <Login/>}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeAppTC})(App)\n\n","import React, {Suspense} from 'react'\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component: any) => {\r\n    return (props:any) => (\r\n        <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {profileReducer, addPost, setUserProfile, setStatus, deletePost} from \"./profile-reducer\";\r\nimport {dialogsReducer, sendMessage} from \"./dialogs-reducer\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {\r\n    usersReducer,\r\n    isFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setIsFetching, toggleIsFollowingInProgress,\r\n} from \"./users/users-reducer\";\r\nimport {authReducer, setUserData} from \"./auth-reducer\";\r\nimport {appReducer, setInitializedAC} from \"./app-reducer\";\r\n\r\nexport type ActionsType =\r\n    | ReturnType<typeof addPost>\r\n    | ReturnType<typeof deletePost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof sendMessage>\r\n    | ReturnType<typeof isFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof toggleIsFollowingInProgress>\r\n    | ReturnType<typeof setUserData>\r\n    | ReturnType<typeof setInitializedAC>\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow._store_ = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"User_User__2UMQx\",\"name\":\"User_name__MfOdA\",\"status\":\"User_status__bzn8S\",\"city\":\"User_city__2VtQT\",\"btnFollow\":\"User_btnFollow__n7wyn\",\"btnUnFollow\":\"User_btnUnFollow__3E0uU\",\"avaBlock\":\"User_avaBlock__2QJjK\",\"ava\":\"User_ava__awGZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__umNmV\",\"screenImg\":\"ProfileInfo_screenImg__3BvBx\",\"profileName\":\"ProfileInfo_profileName__qPJMO\",\"myContacts\":\"ProfileInfo_myContacts__13hRs\",\"profilePhoto\":\"ProfileInfo_profilePhoto__nd-Ly\",\"ProfileStatus\":\"ProfileInfo_ProfileStatus__2xeA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormBlock\":\"FormControls_FormBlock__2DipY\",\"Textarea\":\"FormControls_Textarea__P3hRC\",\"error\":\"FormControls_error__1hEru\",\"summaryError\":\"FormControls_summaryError__2fmqE\"};","\r\n\r\nexport const required = (value: string | null): string | undefined => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength30 = (value: string | null): string | undefined => {\r\n    return value && value.length > 30 ? \"Max length is 30 symbols\" : undefined\r\n}\r\nexport const MaxLengthCreator = (maxLength: number) => (value: string | null) => {\r\n    return value && value.length > maxLength ? `Max length is ${maxLength} symbols` : undefined\r\n}\r\n","import React from \"react\";\r\nimport style from \"./FormControls.module.css\"\r\n\r\ntype TextareaType = {\r\n    input: any\r\n    meta: any\r\n}\r\n\r\nconst FormControl: React.FC<TextareaType> = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return (\r\n        <div className={style.FormBlock + \" \" + (hasError ? style.error : '')}>\r\n           <div>{props.children}</div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<TextareaType> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea className={style.Textarea} {...props.input} {...restProps}  />\r\n        </FormControl>\r\n    )\r\n}\r\nexport const Input: React.FC<TextareaType> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input className={style.Textarea} {...props.input} {...restProps}  />\r\n        </FormControl>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__3CfL0\",\"Nav\":\"App_Nav__2kzpm\",\"Main\":\"App_Main__2348U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2tjJu\",\"reactLogo\":\"Header_reactLogo__3t_ab\",\"loginBlock\":\"Header_loginBlock__RTag9\",\"profileName\":\"Header_profileName__16Qj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__dUJtb\",\"messageBlock\":\"Post_messageBlock__2w3IV\",\"likesCount\":\"Post_likesCount__Jt_TK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1zo2i\",\"InputTextBlock\":\"Login_InputTextBlock__Dg1nY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__20x2X\",\"header\":\"Users_header__wwU2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1HZxR\",\"selectedPage\":\"Paginator_selectedPage__1NLQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__1ljyL\",\"postBlock\":\"MyPosts_postBlock__y7EXc\"};"],"sourceRoot":""}